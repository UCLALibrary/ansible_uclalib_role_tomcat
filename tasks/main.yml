---
- name: Download Tomcat into /usr/local directory
  get_url: url=http://archive.apache.org/dist/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.zip dest=/usr/local/apache-tomcat-{{ tomcat_version }}.zip

- name: Unpack Tomcat Download
  unarchive: src=/usr/local/apache-tomcat-{{ tomcat_version }}.zip dest=/usr/local copy=no

- name: Create symbolic link for the CATALINA_HOME directory
  file: src=/usr/local/apache-tomcat-{{ tomcat_version }} dest=/usr/local/tomcat{{ tomcat_major_version }} state=link

- name: Create dedicated user accounts for each Tomcat application
  user: name={{ item.app_name }} comment="{{ item.app_name }} User" shell=/bin/bash home=/usr/local/{{ item.app_name }}
  with_items: "{{ tomcat_applications }}"

- name: Create the CATALINA_BASE paths for each Tomcat application and set ownership
  file: path=/usr/local/{{ item.app_name }} owner={{ item.app_name }} group={{ item.app_name }} state=directory
  with_items: "{{ tomcat_applications }}"

- name: Copy sub-directories from CATALINA_HOME to CATALINA_BASE
  command: rsync --ignore-existing -a /usr/local/tomcat{{ tomcat_major_version }}/{{ item[1] }} /usr/local/{{ item[0][app_name] }}
  with_nested:
    - "{{ tomcat_applications }}"
    - tomcat_subdirs

- name: Create empty lib directory in CATALINA_BASE to store applicaiton specific libraries
  file: path=/usr/local/{{ item.app_name }}/lib owner={{ item.app_name }} group={{ item.app_name }} state=directory
  with_items: "{{ tomcat_applications }}"

- name: Put in place the tomcat init script
  copy: src=tomcat_init dest=/etc/init.d/tomcat mode=0755

- name: Create init script symbolic links for each app
  file: src=/etc/init.d/tomcat dest=/etc/init.d/{{ item.app_name }} state=link
  with_items: "{{ tomcat_applications }}"

- name: Put in place the tomcat app environment variables file
  template: src=tomcat_env.j2 dest=/etc/sysconfig/{{ item.app_name }}
  with_items: "{{ tomcat_applications }}"

- name: Put in place the tomcat app server.xml file
  template: src=tomcat_server_xml.j2 dest=/usr/local/{{ item.app_name }}/conf/server.xml owner={{ item.app_name }} group={{ item.app_name }}
  with_items: "{{ tomcat_applications }}"
